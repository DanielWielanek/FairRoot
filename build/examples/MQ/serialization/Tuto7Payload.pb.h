// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Tuto7Payload.proto

#ifndef PROTOBUF_Tuto7Payload_2eproto__INCLUDED
#define PROTOBUF_Tuto7Payload_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Tuto7PayloadProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Tuto7Payload_2eproto();
void protobuf_AssignDesc_Tuto7Payload_2eproto();
void protobuf_ShutdownFile_Tuto7Payload_2eproto();

class Digi;
class Hit;
class DigiPayload;
class HitPayload;

// ===================================================================

class Digi : public ::google::protobuf::Message {
 public:
  Digi();
  virtual ~Digi();

  Digi(const Digi& from);

  inline Digi& operator=(const Digi& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Digi& default_instance();

  void Swap(Digi* other);

  // implements Message ----------------------------------------------

  Digi* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Digi& from);
  void MergeFrom(const Digi& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // optional int32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // optional int32 z = 3;
  inline bool has_z() const;
  inline void clear_z();
  static const int kZFieldNumber = 3;
  inline ::google::protobuf::int32 z() const;
  inline void set_z(::google::protobuf::int32 value);

  // optional double time_stamp = 4;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 4;
  inline double time_stamp() const;
  inline void set_time_stamp(double value);

  // optional double time_stamperror = 5;
  inline bool has_time_stamperror() const;
  inline void clear_time_stamperror();
  static const int kTimeStamperrorFieldNumber = 5;
  inline double time_stamperror() const;
  inline void set_time_stamperror(double value);

  // @@protoc_insertion_point(class_scope:Tuto7PayloadProto.Digi)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_z();
  inline void clear_has_z();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();
  inline void set_has_time_stamperror();
  inline void clear_has_time_stamperror();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  double time_stamp_;
  double time_stamperror_;
  ::google::protobuf::int32 z_;
  friend void  protobuf_AddDesc_Tuto7Payload_2eproto();
  friend void protobuf_AssignDesc_Tuto7Payload_2eproto();
  friend void protobuf_ShutdownFile_Tuto7Payload_2eproto();

  void InitAsDefaultInstance();
  static Digi* default_instance_;
};
// -------------------------------------------------------------------

class Hit : public ::google::protobuf::Message {
 public:
  Hit();
  virtual ~Hit();

  Hit(const Hit& from);

  inline Hit& operator=(const Hit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Hit& default_instance();

  void Swap(Hit* other);

  // implements Message ----------------------------------------------

  Hit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Hit& from);
  void MergeFrom(const Hit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 det_id = 1;
  inline bool has_det_id() const;
  inline void clear_det_id();
  static const int kDetIdFieldNumber = 1;
  inline ::google::protobuf::int32 det_id() const;
  inline void set_det_id(::google::protobuf::int32 value);

  // optional int32 mcindex = 2;
  inline bool has_mcindex() const;
  inline void clear_mcindex();
  static const int kMcindexFieldNumber = 2;
  inline ::google::protobuf::int32 mcindex() const;
  inline void set_mcindex(::google::protobuf::int32 value);

  // optional double posx = 3;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 3;
  inline double posx() const;
  inline void set_posx(double value);

  // optional double posy = 4;
  inline bool has_posy() const;
  inline void clear_posy();
  static const int kPosyFieldNumber = 4;
  inline double posy() const;
  inline void set_posy(double value);

  // optional double posz = 5;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPoszFieldNumber = 5;
  inline double posz() const;
  inline void set_posz(double value);

  // optional double dposx = 6;
  inline bool has_dposx() const;
  inline void clear_dposx();
  static const int kDposxFieldNumber = 6;
  inline double dposx() const;
  inline void set_dposx(double value);

  // optional double dposy = 7;
  inline bool has_dposy() const;
  inline void clear_dposy();
  static const int kDposyFieldNumber = 7;
  inline double dposy() const;
  inline void set_dposy(double value);

  // optional double dposz = 8;
  inline bool has_dposz() const;
  inline void clear_dposz();
  static const int kDposzFieldNumber = 8;
  inline double dposz() const;
  inline void set_dposz(double value);

  // optional double time_stamp = 9;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 9;
  inline double time_stamp() const;
  inline void set_time_stamp(double value);

  // optional double time_stamperror = 10;
  inline bool has_time_stamperror() const;
  inline void clear_time_stamperror();
  static const int kTimeStamperrorFieldNumber = 10;
  inline double time_stamperror() const;
  inline void set_time_stamperror(double value);

  // @@protoc_insertion_point(class_scope:Tuto7PayloadProto.Hit)
 private:
  inline void set_has_det_id();
  inline void clear_has_det_id();
  inline void set_has_mcindex();
  inline void clear_has_mcindex();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posy();
  inline void clear_has_posy();
  inline void set_has_posz();
  inline void clear_has_posz();
  inline void set_has_dposx();
  inline void clear_has_dposx();
  inline void set_has_dposy();
  inline void clear_has_dposy();
  inline void set_has_dposz();
  inline void clear_has_dposz();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();
  inline void set_has_time_stamperror();
  inline void clear_has_time_stamperror();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 det_id_;
  ::google::protobuf::int32 mcindex_;
  double posx_;
  double posy_;
  double posz_;
  double dposx_;
  double dposy_;
  double dposz_;
  double time_stamp_;
  double time_stamperror_;
  friend void  protobuf_AddDesc_Tuto7Payload_2eproto();
  friend void protobuf_AssignDesc_Tuto7Payload_2eproto();
  friend void protobuf_ShutdownFile_Tuto7Payload_2eproto();

  void InitAsDefaultInstance();
  static Hit* default_instance_;
};
// -------------------------------------------------------------------

class DigiPayload : public ::google::protobuf::Message {
 public:
  DigiPayload();
  virtual ~DigiPayload();

  DigiPayload(const DigiPayload& from);

  inline DigiPayload& operator=(const DigiPayload& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DigiPayload& default_instance();

  void Swap(DigiPayload* other);

  // implements Message ----------------------------------------------

  DigiPayload* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DigiPayload& from);
  void MergeFrom(const DigiPayload& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Tuto7PayloadProto.Digi digi = 1;
  inline int digi_size() const;
  inline void clear_digi();
  static const int kDigiFieldNumber = 1;
  inline const ::Tuto7PayloadProto::Digi& digi(int index) const;
  inline ::Tuto7PayloadProto::Digi* mutable_digi(int index);
  inline ::Tuto7PayloadProto::Digi* add_digi();
  inline const ::google::protobuf::RepeatedPtrField< ::Tuto7PayloadProto::Digi >&
      digi() const;
  inline ::google::protobuf::RepeatedPtrField< ::Tuto7PayloadProto::Digi >*
      mutable_digi();

  // optional bytes bigBuffer = 2;
  inline bool has_bigbuffer() const;
  inline void clear_bigbuffer();
  static const int kBigBufferFieldNumber = 2;
  inline const ::std::string& bigbuffer() const;
  inline void set_bigbuffer(const ::std::string& value);
  inline void set_bigbuffer(const char* value);
  inline void set_bigbuffer(const void* value, size_t size);
  inline ::std::string* mutable_bigbuffer();
  inline ::std::string* release_bigbuffer();
  inline void set_allocated_bigbuffer(::std::string* bigbuffer);

  // @@protoc_insertion_point(class_scope:Tuto7PayloadProto.DigiPayload)
 private:
  inline void set_has_bigbuffer();
  inline void clear_has_bigbuffer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Tuto7PayloadProto::Digi > digi_;
  ::std::string* bigbuffer_;
  friend void  protobuf_AddDesc_Tuto7Payload_2eproto();
  friend void protobuf_AssignDesc_Tuto7Payload_2eproto();
  friend void protobuf_ShutdownFile_Tuto7Payload_2eproto();

  void InitAsDefaultInstance();
  static DigiPayload* default_instance_;
};
// -------------------------------------------------------------------

class HitPayload : public ::google::protobuf::Message {
 public:
  HitPayload();
  virtual ~HitPayload();

  HitPayload(const HitPayload& from);

  inline HitPayload& operator=(const HitPayload& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HitPayload& default_instance();

  void Swap(HitPayload* other);

  // implements Message ----------------------------------------------

  HitPayload* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HitPayload& from);
  void MergeFrom(const HitPayload& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Tuto7PayloadProto.Hit hit = 1;
  inline int hit_size() const;
  inline void clear_hit();
  static const int kHitFieldNumber = 1;
  inline const ::Tuto7PayloadProto::Hit& hit(int index) const;
  inline ::Tuto7PayloadProto::Hit* mutable_hit(int index);
  inline ::Tuto7PayloadProto::Hit* add_hit();
  inline const ::google::protobuf::RepeatedPtrField< ::Tuto7PayloadProto::Hit >&
      hit() const;
  inline ::google::protobuf::RepeatedPtrField< ::Tuto7PayloadProto::Hit >*
      mutable_hit();

  // optional bytes bigBuffer = 2;
  inline bool has_bigbuffer() const;
  inline void clear_bigbuffer();
  static const int kBigBufferFieldNumber = 2;
  inline const ::std::string& bigbuffer() const;
  inline void set_bigbuffer(const ::std::string& value);
  inline void set_bigbuffer(const char* value);
  inline void set_bigbuffer(const void* value, size_t size);
  inline ::std::string* mutable_bigbuffer();
  inline ::std::string* release_bigbuffer();
  inline void set_allocated_bigbuffer(::std::string* bigbuffer);

  // @@protoc_insertion_point(class_scope:Tuto7PayloadProto.HitPayload)
 private:
  inline void set_has_bigbuffer();
  inline void clear_has_bigbuffer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Tuto7PayloadProto::Hit > hit_;
  ::std::string* bigbuffer_;
  friend void  protobuf_AddDesc_Tuto7Payload_2eproto();
  friend void protobuf_AssignDesc_Tuto7Payload_2eproto();
  friend void protobuf_ShutdownFile_Tuto7Payload_2eproto();

  void InitAsDefaultInstance();
  static HitPayload* default_instance_;
};
// ===================================================================


// ===================================================================

// Digi

// optional int32 x = 1;
inline bool Digi::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Digi::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Digi::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Digi::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Digi::x() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.Digi.x)
  return x_;
}
inline void Digi::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.Digi.x)
}

// optional int32 y = 2;
inline bool Digi::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Digi::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Digi::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Digi::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Digi::y() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.Digi.y)
  return y_;
}
inline void Digi::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.Digi.y)
}

// optional int32 z = 3;
inline bool Digi::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Digi::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Digi::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Digi::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 Digi::z() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.Digi.z)
  return z_;
}
inline void Digi::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.Digi.z)
}

// optional double time_stamp = 4;
inline bool Digi::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Digi::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Digi::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Digi::clear_time_stamp() {
  time_stamp_ = 0;
  clear_has_time_stamp();
}
inline double Digi::time_stamp() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.Digi.time_stamp)
  return time_stamp_;
}
inline void Digi::set_time_stamp(double value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.Digi.time_stamp)
}

// optional double time_stamperror = 5;
inline bool Digi::has_time_stamperror() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Digi::set_has_time_stamperror() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Digi::clear_has_time_stamperror() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Digi::clear_time_stamperror() {
  time_stamperror_ = 0;
  clear_has_time_stamperror();
}
inline double Digi::time_stamperror() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.Digi.time_stamperror)
  return time_stamperror_;
}
inline void Digi::set_time_stamperror(double value) {
  set_has_time_stamperror();
  time_stamperror_ = value;
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.Digi.time_stamperror)
}

// -------------------------------------------------------------------

// Hit

// optional int32 det_id = 1;
inline bool Hit::has_det_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Hit::set_has_det_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Hit::clear_has_det_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Hit::clear_det_id() {
  det_id_ = 0;
  clear_has_det_id();
}
inline ::google::protobuf::int32 Hit::det_id() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.Hit.det_id)
  return det_id_;
}
inline void Hit::set_det_id(::google::protobuf::int32 value) {
  set_has_det_id();
  det_id_ = value;
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.Hit.det_id)
}

// optional int32 mcindex = 2;
inline bool Hit::has_mcindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Hit::set_has_mcindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Hit::clear_has_mcindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Hit::clear_mcindex() {
  mcindex_ = 0;
  clear_has_mcindex();
}
inline ::google::protobuf::int32 Hit::mcindex() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.Hit.mcindex)
  return mcindex_;
}
inline void Hit::set_mcindex(::google::protobuf::int32 value) {
  set_has_mcindex();
  mcindex_ = value;
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.Hit.mcindex)
}

// optional double posx = 3;
inline bool Hit::has_posx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Hit::set_has_posx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Hit::clear_has_posx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Hit::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline double Hit::posx() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.Hit.posx)
  return posx_;
}
inline void Hit::set_posx(double value) {
  set_has_posx();
  posx_ = value;
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.Hit.posx)
}

// optional double posy = 4;
inline bool Hit::has_posy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Hit::set_has_posy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Hit::clear_has_posy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Hit::clear_posy() {
  posy_ = 0;
  clear_has_posy();
}
inline double Hit::posy() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.Hit.posy)
  return posy_;
}
inline void Hit::set_posy(double value) {
  set_has_posy();
  posy_ = value;
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.Hit.posy)
}

// optional double posz = 5;
inline bool Hit::has_posz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Hit::set_has_posz() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Hit::clear_has_posz() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Hit::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline double Hit::posz() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.Hit.posz)
  return posz_;
}
inline void Hit::set_posz(double value) {
  set_has_posz();
  posz_ = value;
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.Hit.posz)
}

// optional double dposx = 6;
inline bool Hit::has_dposx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Hit::set_has_dposx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Hit::clear_has_dposx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Hit::clear_dposx() {
  dposx_ = 0;
  clear_has_dposx();
}
inline double Hit::dposx() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.Hit.dposx)
  return dposx_;
}
inline void Hit::set_dposx(double value) {
  set_has_dposx();
  dposx_ = value;
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.Hit.dposx)
}

// optional double dposy = 7;
inline bool Hit::has_dposy() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Hit::set_has_dposy() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Hit::clear_has_dposy() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Hit::clear_dposy() {
  dposy_ = 0;
  clear_has_dposy();
}
inline double Hit::dposy() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.Hit.dposy)
  return dposy_;
}
inline void Hit::set_dposy(double value) {
  set_has_dposy();
  dposy_ = value;
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.Hit.dposy)
}

// optional double dposz = 8;
inline bool Hit::has_dposz() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Hit::set_has_dposz() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Hit::clear_has_dposz() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Hit::clear_dposz() {
  dposz_ = 0;
  clear_has_dposz();
}
inline double Hit::dposz() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.Hit.dposz)
  return dposz_;
}
inline void Hit::set_dposz(double value) {
  set_has_dposz();
  dposz_ = value;
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.Hit.dposz)
}

// optional double time_stamp = 9;
inline bool Hit::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Hit::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Hit::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Hit::clear_time_stamp() {
  time_stamp_ = 0;
  clear_has_time_stamp();
}
inline double Hit::time_stamp() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.Hit.time_stamp)
  return time_stamp_;
}
inline void Hit::set_time_stamp(double value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.Hit.time_stamp)
}

// optional double time_stamperror = 10;
inline bool Hit::has_time_stamperror() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Hit::set_has_time_stamperror() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Hit::clear_has_time_stamperror() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Hit::clear_time_stamperror() {
  time_stamperror_ = 0;
  clear_has_time_stamperror();
}
inline double Hit::time_stamperror() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.Hit.time_stamperror)
  return time_stamperror_;
}
inline void Hit::set_time_stamperror(double value) {
  set_has_time_stamperror();
  time_stamperror_ = value;
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.Hit.time_stamperror)
}

// -------------------------------------------------------------------

// DigiPayload

// repeated .Tuto7PayloadProto.Digi digi = 1;
inline int DigiPayload::digi_size() const {
  return digi_.size();
}
inline void DigiPayload::clear_digi() {
  digi_.Clear();
}
inline const ::Tuto7PayloadProto::Digi& DigiPayload::digi(int index) const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.DigiPayload.digi)
  return digi_.Get(index);
}
inline ::Tuto7PayloadProto::Digi* DigiPayload::mutable_digi(int index) {
  // @@protoc_insertion_point(field_mutable:Tuto7PayloadProto.DigiPayload.digi)
  return digi_.Mutable(index);
}
inline ::Tuto7PayloadProto::Digi* DigiPayload::add_digi() {
  // @@protoc_insertion_point(field_add:Tuto7PayloadProto.DigiPayload.digi)
  return digi_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Tuto7PayloadProto::Digi >&
DigiPayload::digi() const {
  // @@protoc_insertion_point(field_list:Tuto7PayloadProto.DigiPayload.digi)
  return digi_;
}
inline ::google::protobuf::RepeatedPtrField< ::Tuto7PayloadProto::Digi >*
DigiPayload::mutable_digi() {
  // @@protoc_insertion_point(field_mutable_list:Tuto7PayloadProto.DigiPayload.digi)
  return &digi_;
}

// optional bytes bigBuffer = 2;
inline bool DigiPayload::has_bigbuffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DigiPayload::set_has_bigbuffer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DigiPayload::clear_has_bigbuffer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DigiPayload::clear_bigbuffer() {
  if (bigbuffer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bigbuffer_->clear();
  }
  clear_has_bigbuffer();
}
inline const ::std::string& DigiPayload::bigbuffer() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.DigiPayload.bigBuffer)
  return *bigbuffer_;
}
inline void DigiPayload::set_bigbuffer(const ::std::string& value) {
  set_has_bigbuffer();
  if (bigbuffer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bigbuffer_ = new ::std::string;
  }
  bigbuffer_->assign(value);
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.DigiPayload.bigBuffer)
}
inline void DigiPayload::set_bigbuffer(const char* value) {
  set_has_bigbuffer();
  if (bigbuffer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bigbuffer_ = new ::std::string;
  }
  bigbuffer_->assign(value);
  // @@protoc_insertion_point(field_set_char:Tuto7PayloadProto.DigiPayload.bigBuffer)
}
inline void DigiPayload::set_bigbuffer(const void* value, size_t size) {
  set_has_bigbuffer();
  if (bigbuffer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bigbuffer_ = new ::std::string;
  }
  bigbuffer_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Tuto7PayloadProto.DigiPayload.bigBuffer)
}
inline ::std::string* DigiPayload::mutable_bigbuffer() {
  set_has_bigbuffer();
  if (bigbuffer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bigbuffer_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Tuto7PayloadProto.DigiPayload.bigBuffer)
  return bigbuffer_;
}
inline ::std::string* DigiPayload::release_bigbuffer() {
  clear_has_bigbuffer();
  if (bigbuffer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = bigbuffer_;
    bigbuffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DigiPayload::set_allocated_bigbuffer(::std::string* bigbuffer) {
  if (bigbuffer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bigbuffer_;
  }
  if (bigbuffer) {
    set_has_bigbuffer();
    bigbuffer_ = bigbuffer;
  } else {
    clear_has_bigbuffer();
    bigbuffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Tuto7PayloadProto.DigiPayload.bigBuffer)
}

// -------------------------------------------------------------------

// HitPayload

// repeated .Tuto7PayloadProto.Hit hit = 1;
inline int HitPayload::hit_size() const {
  return hit_.size();
}
inline void HitPayload::clear_hit() {
  hit_.Clear();
}
inline const ::Tuto7PayloadProto::Hit& HitPayload::hit(int index) const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.HitPayload.hit)
  return hit_.Get(index);
}
inline ::Tuto7PayloadProto::Hit* HitPayload::mutable_hit(int index) {
  // @@protoc_insertion_point(field_mutable:Tuto7PayloadProto.HitPayload.hit)
  return hit_.Mutable(index);
}
inline ::Tuto7PayloadProto::Hit* HitPayload::add_hit() {
  // @@protoc_insertion_point(field_add:Tuto7PayloadProto.HitPayload.hit)
  return hit_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Tuto7PayloadProto::Hit >&
HitPayload::hit() const {
  // @@protoc_insertion_point(field_list:Tuto7PayloadProto.HitPayload.hit)
  return hit_;
}
inline ::google::protobuf::RepeatedPtrField< ::Tuto7PayloadProto::Hit >*
HitPayload::mutable_hit() {
  // @@protoc_insertion_point(field_mutable_list:Tuto7PayloadProto.HitPayload.hit)
  return &hit_;
}

// optional bytes bigBuffer = 2;
inline bool HitPayload::has_bigbuffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HitPayload::set_has_bigbuffer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HitPayload::clear_has_bigbuffer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HitPayload::clear_bigbuffer() {
  if (bigbuffer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bigbuffer_->clear();
  }
  clear_has_bigbuffer();
}
inline const ::std::string& HitPayload::bigbuffer() const {
  // @@protoc_insertion_point(field_get:Tuto7PayloadProto.HitPayload.bigBuffer)
  return *bigbuffer_;
}
inline void HitPayload::set_bigbuffer(const ::std::string& value) {
  set_has_bigbuffer();
  if (bigbuffer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bigbuffer_ = new ::std::string;
  }
  bigbuffer_->assign(value);
  // @@protoc_insertion_point(field_set:Tuto7PayloadProto.HitPayload.bigBuffer)
}
inline void HitPayload::set_bigbuffer(const char* value) {
  set_has_bigbuffer();
  if (bigbuffer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bigbuffer_ = new ::std::string;
  }
  bigbuffer_->assign(value);
  // @@protoc_insertion_point(field_set_char:Tuto7PayloadProto.HitPayload.bigBuffer)
}
inline void HitPayload::set_bigbuffer(const void* value, size_t size) {
  set_has_bigbuffer();
  if (bigbuffer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bigbuffer_ = new ::std::string;
  }
  bigbuffer_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Tuto7PayloadProto.HitPayload.bigBuffer)
}
inline ::std::string* HitPayload::mutable_bigbuffer() {
  set_has_bigbuffer();
  if (bigbuffer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bigbuffer_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Tuto7PayloadProto.HitPayload.bigBuffer)
  return bigbuffer_;
}
inline ::std::string* HitPayload::release_bigbuffer() {
  clear_has_bigbuffer();
  if (bigbuffer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = bigbuffer_;
    bigbuffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HitPayload::set_allocated_bigbuffer(::std::string* bigbuffer) {
  if (bigbuffer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bigbuffer_;
  }
  if (bigbuffer) {
    set_has_bigbuffer();
    bigbuffer_ = bigbuffer;
  } else {
    clear_has_bigbuffer();
    bigbuffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Tuto7PayloadProto.HitPayload.bigBuffer)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Tuto7PayloadProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Tuto7Payload_2eproto__INCLUDED
